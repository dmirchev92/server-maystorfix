'use client'

import { useState, useEffect } from 'react'
import { useParams } from 'next/navigation'
import { useAuth } from '@/contexts/AuthContext'
import { Header } from '@/components/Header'
import { Footer } from '@/components/Footer'
import ReviewsSection from '@/components/ReviewsSection'
import { apiClient } from '@/lib/api'

interface ServiceProvider {
  id: string
  business_name: string
  service_category: string
  description: string
  experience_years: number
  hourly_rate: number
  city: string
  neighborhood: string
  address: string
  phone_number: string
  email: string
  website_url: string
  rating: number
  total_reviews: number
  first_name: string
  last_name: string
  is_verified: boolean
}

export default function ProviderDetailPage() {
  const params = useParams()
  const { user } = useAuth()
  const [provider, setProvider] = useState<ServiceProvider | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [showContactForm, setShowContactForm] = useState(false)
  const [clickTracked, setClickTracked] = useState(false)
  const [reviews, setReviews] = useState<any[]>([])
  const [reviewsLoading, setReviewsLoading] = useState(true)
  const [lastMouseUpdate, setLastMouseUpdate] = useState(0)

  // Update provider rating by calling the backend
  const updateProviderRating = async (providerId: string) => {
    try {
      console.log('üîÑ Updating provider rating for:', providerId)
      // Call the backend to recalculate and update provider rating
      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'https://maystorfix.com/api/v1'}/reviews/provider/${providerId}/update-rating`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`,
          'Content-Type': 'application/json'
        }
      })
      
      if (response.ok) {
        console.log('‚úÖ Provider rating updated successfully')
        // Refetch provider data to get updated rating
        const providerResponse = await apiClient.getProvider(providerId)
        const updatedData = providerResponse.data?.data || providerResponse.data?.provider
        if (updatedData) {
          setProvider(updatedData)
        }
      }
    } catch (err) {
      console.error('‚ùå Error updating provider rating:', err)
    }
  }

  // Fetch reviews for the provider
  const fetchReviews = async (providerId: string) => {
    try {
      setReviewsLoading(true)
      console.log('üåü Fetching reviews for provider:', providerId)
      const response = await apiClient.getProviderReviews(providerId)
      
      if (response.data?.success && response.data?.data) {
        // Check if data is nested (like in ReviewsSection)
        const reviewsData = response.data.data.reviews || response.data.data
        setReviews(reviewsData)
      } else {
        setReviews([])
      }
    } catch (err) {
      console.error('‚ùå Error fetching reviews:', err)
      setReviews([])
    } finally {
      setReviewsLoading(false)
    }
  }

  useEffect(() => {
    const fetchProvider = async () => {
      try {
        setLoading(true)
        setError(null)

        const providerId = params.id as string
        console.log('üîç Fetching provider:', providerId)

        const response = await apiClient.getProvider(providerId)
        
        const data = response.data?.data || response.data?.provider
        if (data) {
          console.log('üì¶ Provider data loaded:', data)
          console.log('üñºÔ∏è Gallery data:', data.gallery)
          setProvider(data)
          // Fetch reviews after provider is loaded
          await fetchReviews(providerId)
          // Also update provider rating after fetching reviews
          await updateProviderRating(providerId)
        } else {
          setError('Service provider not found')
        }
        
      } catch (err) {
        console.error('‚ùå Error fetching provider:', err)
        setError('Failed to load service provider details')
      } finally {
        setLoading(false)
      }
    }

    if (params.id) {
      fetchProvider()
    }
  }, [params.id])

  // Separate useEffect for click tracking to prevent duplicate calls
  useEffect(() => {
    if (!provider || !params.id) return

    const providerId = params.id as string
    
    // Use user-based tracking - 1 click per user per profile forever
    // Get current user ID to create unique tracking key
    const userData = localStorage.getItem('user_data')
    let currentUserId = null
    
    try {
      if (userData) {
        const user = JSON.parse(userData)
        currentUserId = user.id
      }
    } catch (e) {
      console.error('Error parsing user data:', e)
    }
    
    // Create unique key combining user ID and profile ID
    const userClickKey = currentUserId ? `user_${currentUserId}_clicked_profile_${providerId}` : `anonymous_clicked_profile_${providerId}`
    const hasUserClickedBefore = localStorage.getItem(userClickKey)
    const canTrackClick = !hasUserClickedBefore
    
    console.log(`[CLICK TRACKING] Provider: ${providerId}, User: ${currentUserId || 'anonymous'}, Can track: ${canTrackClick}, Click tracked state: ${clickTracked}`)
    
    if (canTrackClick && !clickTracked) {
      const trackClick = async () => {
        try {
          // Mark as tracked immediately to prevent duplicate calls
          setClickTracked(true)
          localStorage.setItem(userClickKey, 'true')
          
          const trackUrl = `${process.env.NEXT_PUBLIC_API_URL || 'https://maystorfix.com/api/v1'}/referrals/track/${providerId}`;
          console.log(`[FRONTEND] Tracking profile click: ${trackUrl}`);
          
          // Get or generate visitor ID
          let visitorId = localStorage.getItem('visitor_id');
          if (!visitorId) {
            visitorId = 'visitor_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
            localStorage.setItem('visitor_id', visitorId);
            console.log(`[FRONTEND] Generated new visitor ID: ${visitorId}`);
          } else {
            console.log(`[FRONTEND] Using existing visitor ID: ${visitorId}`);
          }
          
          // Check if user is authenticated and get their user ID
          const userData = localStorage.getItem('user_data')
          const customerUserId = userData ? JSON.parse(userData).id : null
          
          console.log(`[FRONTEND] Customer user ID: ${customerUserId || 'null (not authenticated)'}`)
          
          const trackResponse = await apiClient.trackReferralClick(providerId, {
            customerUserId,
            visitorId
          });
          
          console.log(`[FRONTEND] Track response:`, trackResponse.data);
          
        } catch (trackErr) {
          console.error('Error tracking profile click:', trackErr)
          // Reset tracking state on error so it can be retried
          setClickTracked(false)
          localStorage.removeItem(userClickKey)
        }
      }

      trackClick()
    }
  }, [provider, params.id, clickTracked])

  const getCategoryDisplayName = (category: string | undefined) => {
    if (!category) return '–û–±—â–∏';
    
    const categoryNames: { [key: string]: string } = {
      'electrician': '–ï–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫',
      'plumber': '–í–æ–¥–æ–ø—Ä–æ–≤–æ–¥—á–∏–∫',
      'hvac': '–ö–ª–∏–º–∞—Ç–∏–∫',
      'carpenter': '–î—ä—Ä–≤–æ–¥–µ–ª–µ—Ü',
      'painter': '–ë–æ—è–¥–∂–∏—è',
      'locksmith': '–ö–ª—é—á–∞—Ä',
      'cleaner': '–ü–æ—á–∏—Å—Ç–≤–∞–Ω–µ',
      'gardener': '–ì—Ä–∞–¥–∏–Ω–∞—Ä',
      'handyman': '–ú–∞–π—Å—Ç–æ—Ä –∑–∞ –≤—Å–∏—á–∫–æ',
      'appliance_repair': '–†–µ–º–æ–Ω—Ç –Ω–∞ —É—Ä–µ–¥–∏'
    }
    return categoryNames[category] || category
  }

  // Reviews are now fetched from API instead of using mock data

  // Render stars with half-star support - PROPER HALF STARS
  const renderStarsDisplay = (rating: number) => {
    const stars = []
    
    for (let i = 1; i <= 5; i++) {
      if (i <= Math.floor(rating)) {
        // Full star - solid yellow star
        stars.push(<span key={i} className="text-yellow-500">‚òÖ</span>)
      } else if (i === Math.floor(rating) + 1 && rating % 1 !== 0) {
        // Half star - half yellow, half gray
        stars.push(
          <span key={i} className="relative inline-block">
            <span className="text-gray-300">‚òÖ</span>
            <span 
              className="absolute top-0 left-0 text-yellow-500 overflow-hidden"
              style={{ width: '50%' }}
            >
              ‚òÖ
            </span>
          </span>
        )
      } else {
        // Empty star - gray star
        stars.push(<span key={i} className="text-gray-300">‚òÖ</span>)
      }
    }
    return stars
  }

  // Simple stars for text display (backwards compatibility)
  const getStars = (rating: number) => {
    const stars = []
    const fullStars = Math.floor(rating)
    const hasHalfStar = rating % 1 !== 0

    for (let i = 0; i < fullStars; i++) {
      stars.push('‚≠ê')
    }
    if (hasHalfStar) {
      stars.push('‚≠ê')
    }
    while (stars.length < 5) {
      stars.push('‚òÜ')
    }
    return stars.join('')
  }

  const handleContactSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    // TODO: Implement contact form submission
    alert('–°—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ —â–µ –±—ä–¥–µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–æ —Å–∫–æ—Ä–æ!')
    setShowContactForm(false)
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-indigo-900">
        <Header />
        <main className="container mx-auto px-4 py-8">
          <div className="text-center py-12">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-white/30 mx-auto"></div>
            <p className="mt-4 text-slate-300">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...</p>
          </div>
        </main>
        <Footer />
      </div>
    )
  }

  if (error || !provider) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-indigo-900">
        <Header />
        <main className="container mx-auto px-4 py-8">
          <div className="bg-red-500/10 border border-red-400/30 rounded-lg p-6 text-center backdrop-blur-sm">
            <p className="text-red-300">‚ùå {error || '–£—Å–ª—É–≥–∞—Ç–∞ –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–∞'}</p>
            <a 
              href="/search" 
              className="mt-4 inline-block bg-red-600/80 text-white px-4 py-2 rounded hover:bg-red-600 transition-colors"
            >
              –í—ä—Ä–Ω–∏ —Å–µ –∫—ä–º —Ç—ä—Ä—Å–µ–Ω–µ—Ç–æ
            </a>
          </div>
        </main>
        <Footer />
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-indigo-900 relative overflow-hidden">
      {/* Industrial background elements */}
      <div className="absolute inset-0">
        <div className="absolute top-0 left-0 w-96 h-96 bg-gradient-to-br from-indigo-500/10 to-slate-500/10 rounded-lg blur-3xl"></div>
        <div className="absolute bottom-0 right-0 w-80 h-80 bg-gradient-to-br from-purple-500/10 to-slate-500/10 rounded-lg blur-3xl"></div>
      </div>
      
      <Header />
      
      <main className="relative z-10 container mx-auto px-4 py-8">
        {/* Breadcrumb */}
        <nav className="mb-6">
          <ol className="flex items-center space-x-2 text-sm text-slate-300">
            <li><a href="/" className="hover:text-indigo-400 transition-colors">–ù–∞—á–∞–ª–æ</a></li>
            <li>‚Ä∫</li>
            <li><a href="/search" className="hover:text-indigo-400 transition-colors">–¢—ä—Ä—Å–µ–Ω–µ</a></li>
            <li>‚Ä∫</li>
            <li className="text-white font-medium">{provider.business_name}</li>
          </ol>
        </nav>

        <div className="grid gap-8 lg:grid-cols-3">
          {/* Main Content */}
          <div className="lg:col-span-2 flex flex-col">
            {/* Provider Header */}
            <div className="bg-white/10 backdrop-blur-md rounded-xl p-8 mb-6 shadow-xl border border-white/20">
              <div className="flex items-start gap-6 mb-8">
                {/* Profile Picture */}
                <div className="flex-shrink-0">
                  <div className="w-24 h-24 rounded-full overflow-hidden bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center shadow-lg">
                    {(provider as any).profileImageUrl ? (
                      <img 
                        src={(provider as any).profileImageUrl} 
                        alt={`${provider.first_name} ${provider.last_name}`}
                        className="w-full h-full object-cover"
                      />
                    ) : (
                      <span className="text-white text-2xl font-semibold">
                        {provider.first_name?.charAt(0)}{provider.last_name?.charAt(0)}
                      </span>
                    )}
                  </div>
                </div>

                {/* Provider Info */}
                <div className="flex-1 min-w-0">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <h1 className="text-2xl font-bold text-white mb-1">
                        {(provider as any).businessName || provider.business_name || `${provider.first_name} ${provider.last_name}`}
                        {provider.is_verified && (
                          <span className="ml-2 text-green-400 text-lg">‚úì</span>
                        )}
                      </h1>
                      <p className="text-indigo-300 font-medium mb-2">
                        {getCategoryDisplayName((provider as any).serviceCategory || provider.service_category)}
                      </p>
                      <p className="text-slate-300 text-sm">
                        {(provider as any).experienceYears || provider.experience_years || 0} –≥–æ–¥–∏–Ω–∏ –æ–ø–∏—Ç | {provider.city}, {provider.neighborhood}
                      </p>
                    </div>

                    {/* Rating Stars - Right Side */}
                    <div className="flex flex-col items-end ml-4">
                      <div className="flex items-center mb-1">
                        <div className="flex space-x-1">
                          {renderStarsDisplay(provider.rating || 0)}
                        </div>
                      </div>
                      <span className="text-slate-300 text-sm">
                        {Number(provider.rating || 0).toFixed(1)} ({provider.total_reviews || 0} –æ—Ç–∑–∏–≤–∞)
                      </span>
                    </div>
                  </div>
                </div>
              </div>

              {/* About Section */}
              <div>
                <h2 className="text-xl font-semibold text-white mb-4">–ó–∞ –º–µ–Ω</h2>
                <p className="text-slate-300 leading-relaxed">
                  {provider.description || `–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ ${getCategoryDisplayName((provider as any).serviceCategory || provider.service_category).toLowerCase()} —É—Å–ª—É–≥–∏ –æ—Ç ${provider.first_name} ${provider.last_name}. –ö–∞—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–¥–Ω–æ—Å—Ç —Å ${(provider as any).experienceYears || provider.experience_years || 0} –≥–æ–¥–∏–Ω–∏ –æ–ø–∏—Ç –≤ —Å—Ñ–µ—Ä–∞—Ç–∞.`}
                </p>
              </div>
            </div>

            {/* Services Section */}
            <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 mb-6 shadow-xl border border-white/20">
              <h2 className="text-xl font-semibold text-white mb-4">–ü—Ä–µ–¥–ª–∞–≥–∞–Ω–∏ —É—Å–ª—É–≥–∏</h2>
              <div className="grid gap-3">
                <div className="flex items-center p-3 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-colors">
                  <span className="mr-3">üîß</span>
                  <span className="text-slate-200">–û—Å–Ω–æ–≤–Ω–∏ {getCategoryDisplayName((provider as any).serviceCategory || provider.service_category).toLowerCase()} —É—Å–ª—É–≥–∏</span>
                </div>
                <div className="flex items-center p-3 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-colors">
                  <span className="mr-3">üö®</span>
                  <span className="text-slate-200">–°–ø–µ—à–Ω–∏ –ø–æ–≤–∏–∫–≤–∞–Ω–∏—è</span>
                </div>
                <div className="flex items-center p-3 bg-white/5 rounded-lg border border-white/10 hover:bg-white/10 transition-colors">
                  <span className="mr-3">üìã</span>
                  <span className="text-slate-200">–ö–æ–Ω—Å—É–ª—Ç–∞—Ü–∏–∏ –∏ –æ—Ü–µ–Ω–∫–∏</span>
                </div>
              </div>
            </div>

            {/* Gallery Section */}
            {/* Gallery Section */}
            {(provider as any).gallery && (provider as any).gallery.length > 0 ? (
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 mb-6 shadow-xl border border-white/20">
                <h2 className="text-xl font-semibold text-white mb-4">üì∏ –ì–∞–ª–µ—Ä–∏—è –æ—Ç –∑–∞–≤—ä—Ä—à–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∏</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                  {(provider as any).gallery.map((imageUrl: string, index: number) => (
                    <div key={index} className="aspect-square rounded-lg overflow-hidden border-2 border-white/20 hover:border-indigo-400 transition-all duration-300 group cursor-pointer">
                      <img
                        src={imageUrl}
                        alt={`Gallery image ${index + 1}`}
                        className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
                        onClick={() => window.open(imageUrl, '_blank')}
                      />
                    </div>
                  ))}
                </div>
                <p className="text-slate-400 text-center mt-4 text-sm">
                  –ö–ª–∏–∫–Ω–µ—Ç–µ –Ω–∞ —Å–Ω–∏–º–∫–∞ –∑–∞ —É–≤–µ–ª–∏—á–µ–Ω –∏–∑–≥–ª–µ–¥
                </p>
              </div>
            ) : (
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 mb-6 shadow-xl border border-white/20">
                <h2 className="text-xl font-semibold text-white mb-4">–ì–∞–ª–µ—Ä–∏—è –æ—Ç –∑–∞–≤—ä—Ä—à–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∏</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                  {/* Placeholder for future gallery images */}
                  <div className="aspect-square bg-white/5 rounded-lg flex items-center justify-center border border-white/10 hover:bg-white/10 transition-colors">
                    <span className="text-slate-400 text-4xl">üì∑</span>
                  </div>
                  <div className="aspect-square bg-white/5 rounded-lg flex items-center justify-center border border-white/10 hover:bg-white/10 transition-colors">
                    <span className="text-slate-400 text-4xl">üì∑</span>
                  </div>
                  <div className="aspect-square bg-white/5 rounded-lg flex items-center justify-center border border-white/10 hover:bg-white/10 transition-colors">
                    <span className="text-slate-400 text-4xl">üì∑</span>
                  </div>
                </div>
                <p className="text-slate-400 text-center mt-4">
                  –ì–∞–ª–µ—Ä–∏—è—Ç–∞ —â–µ –±—ä–¥–µ –ø–æ–ø—ä–ª–Ω–µ–Ω–∞ —Å –ø—Ä–∏–º–µ—Ä–∏ –æ—Ç –∑–∞–≤—ä—Ä—à–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∏
                </p>
              </div>
            )}

            {/* Certificates Section - Only show if certificates exist */}
            {(provider as any).certificates && (provider as any).certificates.length > 0 && (
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 mb-6 shadow-xl border border-white/20">
                <h2 className="text-xl font-semibold text-white mb-4">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∏ –∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏</h2>
                <div className="grid gap-4">
                  {(provider as any).certificates.map((cert: any, index: number) => (
                    <div key={cert.id || index} className="bg-white/5 border border-white/10 rounded-lg p-4 hover:bg-white/10 transition-colors">
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <h3 className="font-semibold text-white mb-1">{cert.title}</h3>
                          {cert.issuedBy && (
                            <p className="text-sm text-slate-300 mb-1">–ò–∑–¥–∞–¥–µ–Ω –æ—Ç: {cert.issuedBy}</p>
                          )}
                          {cert.issuedAt && (
                            <p className="text-sm text-slate-400">
                              –î–∞—Ç–∞: {new Date(cert.issuedAt).toLocaleDateString('bg-BG')}
                            </p>
                          )}
                        </div>
                        <div className="ml-4">
                          <span className="text-2xl">üèÜ</span>
                        </div>
                      </div>
                      {cert.fileUrl && (
                        <div className="mt-3">
                          <a 
                            href={cert.fileUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="inline-flex items-center text-indigo-400 hover:text-indigo-300 text-sm transition-colors"
                          >
                            üìÑ –í–∏–∂ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
                          </a>
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Reviews Section removed - now integrated into bottom carousel */}

            {/* Spacer to align with advertisement section */}
            <div className="flex-1"></div>
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1 flex flex-col">
          {/* Contact Card */}
          <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 mb-6 sticky top-4 shadow-xl border border-white/20">
            <h3 className="text-lg font-semibold text-white mb-4">–°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ</h3>
            
            <div className="space-y-3 mb-6">
              <div className="flex items-center">
                <span className="mr-3">üìû</span>
                <a 
                  href={`tel:${(provider as any).profilePhone || provider.phone_number}`}
                  className="text-indigo-400 hover:text-indigo-300 transition-colors"
                >
                  {(provider as any).profilePhone || provider.phone_number}
                </a>
              </div>
              <div className="flex items-center">
                <span className="mr-3">üìß</span>
                <a 
                  href={`mailto:${provider.email}`}
                  className="text-indigo-400 hover:text-indigo-300 break-all transition-colors"
                >
                  {provider.email}
                </a>
              </div>
              {provider.website_url && (
                <div className="flex items-center">
                  <span className="mr-3">üåê</span>
                  <a 
                    href={provider.website_url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-indigo-400 hover:text-indigo-300 break-all transition-colors"
                  >
                    –£–µ–±—Å–∞–π—Ç
                  </a>
                </div>
              )}
              {provider.address && (
                <div className="flex items-start">
                  <span className="mr-3 mt-1">üìç</span>
                  <span className="text-slate-300">{provider.address}</span>
                </div>
              )}
            </div>

            {/* Only show contact button if user is not viewing their own profile */}
            {user?.id !== provider.id && (
              <div className="space-y-3">
                <button
                  onClick={() => setShowContactForm(true)}
                  className="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-4 rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300 font-medium"
                >
                  ‚úâÔ∏è –ò–∑–ø—Ä–∞—Ç–∏ —Å—ä–æ–±—â–µ–Ω–∏–µ
                </button>
              </div>
            )}
            
            {/* Show message when viewing own profile */}
            {user?.id === provider.id && (
              <div className="bg-blue-500/20 border border-blue-400/30 rounded-lg p-4 text-center">
                <p className="text-blue-200 text-sm">
                  üë§ –¢–æ–≤–∞ –µ –≤–∞—à–∏—è—Ç –ø—Ä–æ—Ñ–∏–ª
                </p>
              </div>
            )}
          </div>

          {/* Quick Info */}
          <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 shadow-xl border border-white/20">
            <h3 className="text-lg font-semibold text-white mb-4">–ë—ä—Ä–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <div className="space-y-3 text-sm">
              <div className="flex justify-between">
                <span className="text-slate-400">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                <span className="text-slate-200">{getCategoryDisplayName((provider as any).serviceCategory || provider.service_category)}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-slate-400">–õ–æ–∫–∞—Ü–∏—è:</span>
                <span className="text-slate-200">{provider.city}, {provider.neighborhood}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-slate-400">–û–ø–∏—Ç:</span>
                <span className="text-slate-200">{(provider as any).experienceYears || provider.experience_years || 0} –≥–æ–¥–∏–Ω–∏</span>
              </div>
              <div className="flex justify-between">
                <span className="text-slate-400">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                <span className="text-slate-200">{(provider as any).profilePhone || provider.phone_number || '–ù—è–º–∞ —Ç–µ–ª–µ—Ñ–æ–Ω'}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-slate-400">–†–µ–π—Ç–∏–Ω–≥:</span>
                <span className="text-slate-200">{Number(provider.rating || 0).toFixed(1)}/5</span>
              </div>
            </div>
          </div>

          {/* Advertisement Section */}
          <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 mt-6 flex-1 shadow-xl border border-white/20">
            <h3 className="text-lg font-semibold text-white mb-4 text-center">üéØ –°–ø–µ—Ü–∏–∞–ª–Ω–∞ –æ—Ñ–µ—Ä—Ç–∞</h3>
            <div className="bg-gradient-to-r from-green-500/20 to-blue-500/20 rounded-lg p-6 border-l-4 border-green-400">
              <div className="flex items-center mb-3">
                <span className="text-2xl mr-2">üí∞</span>
                <h4 className="font-bold text-green-300">20% –æ—Ç—Å—Ç—ä–ø–∫–∞ –∑–∞ –Ω–æ–≤–∏ –∫–ª–∏–µ–Ω—Ç–∏!</h4>
              </div>
              <p className="text-slate-200 text-sm mb-4">
                –í—ä–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ —Å–µ –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–Ω–∞—Ç–∞ –Ω–∏ –æ—Ñ–µ—Ä—Ç–∞ –∑–∞ –ø—ä—Ä–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–µ. –í–∞–ª–∏–¥–Ω–∞ –¥–æ –∫—Ä–∞—è –Ω–∞ –º–µ—Å–µ—Ü–∞!
              </p>
              <div className="space-y-3 text-sm mb-4">
                <div className="flex items-center">
                  <span className="text-green-400 mr-2">‚úì</span>
                  <span className="text-slate-200">–ë–µ–∑–ø–ª–∞—Ç–Ω–∞ –∫–æ–Ω—Å—É–ª—Ç–∞—Ü–∏—è –∏ –æ–≥–ª–µ–¥</span>
                </div>
                <div className="flex items-center">
                  <span className="text-green-400 mr-2">‚úì</span>
                  <span className="text-slate-200">–ì–∞—Ä–∞–Ω—Ü–∏—è 2 –≥–æ–¥–∏–Ω–∏ –Ω–∞ –≤—Å–∏—á–∫–∏ —É—Å–ª—É–≥–∏</span>
                </div>
                <div className="flex items-center">
                  <span className="text-green-400 mr-2">‚úì</span>
                  <span className="text-slate-200">24/7 —Å–ø–µ—à–Ω–∏ —É—Å–ª—É–≥–∏</span>
                </div>
                <div className="flex items-center">
                  <span className="text-green-400 mr-2">‚úì</span>
                  <span className="text-slate-200">–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∏</span>
                </div>
                <div className="flex items-center">
                  <span className="text-green-400 mr-2">‚úì</span>
                  <span className="text-slate-200">–ü–æ—á–∏—Å—Ç–≤–∞–Ω–µ —Å–ª–µ–¥ —Ä–∞–±–æ—Ç–∞ –≤–∫–ª—é—á–µ–Ω–æ</span>
                </div>
              </div>
              <div className="bg-yellow-500/20 rounded-lg p-3 mb-4 border border-yellow-400/30">
                <div className="flex items-center mb-2">
                  <span className="text-lg mr-2">üèÜ</span>
                  <span className="font-semibold text-yellow-300">–ó–∞—â–æ –¥–∞ –∏–∑–±–µ—Ä–µ—Ç–µ –Ω–∞—Å?</span>
                </div>
                <ul className="text-xs text-slate-200 space-y-1">
                  <li>‚Ä¢ –ù–∞–¥ 8 –≥–æ–¥–∏–Ω–∏ –æ–ø–∏—Ç –≤ —Å—Ñ–µ—Ä–∞—Ç–∞</li>
                  <li>‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–∞–Ω–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∏</li>
                  <li>‚Ä¢ –§–∏–∫—Å–∏—Ä–∞–Ω–∏ —Ü–µ–Ω–∏ –±–µ–∑ —Å–∫—Ä–∏—Ç–∏ —Ç–∞–∫—Å–∏</li>
                  <li>‚Ä¢ –†–∞–±–æ—Ç–∏–º –∏ –≤ –ø–æ—á–∏–≤–Ω–∏ –¥–Ω–∏</li>
                </ul>
              </div>
              <div className="bg-blue-500/20 rounded-lg p-3 mb-4 border border-blue-400/30">
                <div className="flex items-center mb-2">
                  <span className="text-lg mr-2">üìû</span>
                  <span className="font-semibold text-blue-300">–ö–∞–∫ –¥–∞ —Å–µ —Å–≤—ä—Ä–∂–µ—Ç–µ —Å –Ω–∞—Å?</span>
                </div>
                <ul className="text-xs text-slate-200 space-y-1">
                  <li>‚Ä¢ –ü–æ–∑–≤—ä–Ω–µ—Ç–µ –Ω–∞ 0888665489</li>
                  <li>‚Ä¢ –ò–∑–ø—Ä–∞—Ç–µ—Ç–µ —Å—ä–æ–±—â–µ–Ω–∏–µ —á—Ä–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∞</li>
                  <li>‚Ä¢ –ü–∏—à–µ—Ç–µ –Ω–∏ –Ω–∞ WhatsApp –∏–ª–∏ Viber</li>
                  <li>‚Ä¢ –†–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ: 08:00 - 20:00 —á.</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>

        {/* Contact Form Modal */}
        {showContactForm && (
          <div className="fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center p-4 z-50">
            <div className="bg-slate-800 rounded-xl max-w-md w-full p-6 border border-white/20 shadow-2xl">
              <div className="flex justify-between items-center mb-4">
                <h3 className="text-lg font-semibold text-white">–°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å {provider.business_name}</h3>
                <button
                  onClick={() => setShowContactForm(false)}
                  className="text-slate-400 hover:text-white transition-colors"
                >
                  ‚úï
                </button>
              </div>
              
              <form onSubmit={handleContactSubmit} className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-slate-300 mb-1">
                    –í–∞—à–µ—Ç–æ –∏–º–µ
                  </label>
                  <input
                    type="text"
                    required
                    className="w-full bg-slate-700 border border-slate-600 text-white rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                    placeholder="–í—ä–≤–µ–¥–µ—Ç–µ –≤–∞—à–µ—Ç–æ –∏–º–µ"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-slate-300 mb-1">
                    –¢–µ–ª–µ—Ñ–æ–Ω
                  </label>
                  <input
                    type="tel"
                    required
                    className="w-full bg-slate-700 border border-slate-600 text-white rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                    placeholder="+359..."
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-slate-300 mb-1">
                    –°—ä–æ–±—â–µ–Ω–∏–µ
                  </label>
                  <textarea
                    required
                    rows={4}
                    className="w-full bg-slate-700 border border-slate-600 text-white rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                    placeholder="–û–ø–∏—à–µ—Ç–µ —É—Å–ª—É–≥–∞—Ç–∞, –æ—Ç –∫–æ—è—Ç–æ —Å–µ –Ω—É–∂–¥–∞–µ—Ç–µ..."
                  />
                </div>
                
                <div className="flex gap-3">
                  <button
                    type="button"
                    onClick={() => setShowContactForm(false)}
                    className="flex-1 border border-slate-600 text-slate-300 py-2 px-4 rounded-lg hover:bg-slate-700 transition-colors"
                  >
                    –û—Ç–∫–∞–∑
                  </button>
                  <button
                    type="submit"
                    className="flex-1 bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-2 px-4 rounded-lg hover:shadow-lg transform hover:scale-105 transition-all duration-300"
                  >
                    –ò–∑–ø—Ä–∞—Ç–∏
                  </button>
                </div>
              </form>
            </div>
          </div>
        )}

        {/* Reviews Section */}
        <div className="bg-gradient-to-r from-blue-600 to-purple-600 py-8 relative overflow-hidden">
          <div className="absolute inset-0 bg-black opacity-10"></div>
          <div className="container mx-auto px-4 relative z-10">
            <div className="text-center">
              <div className="flex items-center justify-between max-w-5xl mx-auto mb-4">
                {/* Left side - Rating with stars */}
                <div className="flex items-center space-x-3 bg-white/15 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20 shadow-lg">
                  <div className="flex flex-col items-center">
                    <span className="text-3xl font-bold text-white leading-none">{Number(provider.rating || 0).toFixed(1)}</span>
                    <div className="flex space-x-1 text-lg mt-1">
                      {renderStarsDisplay(provider.rating || 0)}
                    </div>
                  </div>
                </div>

                {/* Center - Title */}
                <div className="bg-white/15 backdrop-blur-md rounded-2xl px-8 py-4 border border-white/20 shadow-lg">
                  <h2 className="text-3xl font-bold text-white tracking-wide">üí¨ –û—Ç–∑–∏–≤–∏ ‚≠ê</h2>
                </div>

                {/* Right side - Review count */}
                <div className="flex items-center space-x-3 bg-white/15 backdrop-blur-md rounded-2xl px-6 py-4 border border-white/20 shadow-lg">
                  <div className="flex flex-col items-center">
                    <span className="text-3xl font-bold text-white leading-none">{reviews.length || provider.total_reviews || 0}</span>
                    <span className="text-white/80 text-sm font-medium mt-1">–æ—Ç–∑–∏–≤–∞</span>
                  </div>
                </div>
              </div>
              <p className="text-white/90 text-lg font-medium">–ö–∞–∫–≤–æ –∫–∞–∑–≤–∞—Ç –Ω–∞—à–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∏</p>
            </div>
          </div>
          {/* Decorative elements */}
          <div className="absolute top-4 left-10 w-20 h-20 bg-white/10 rounded-full blur-xl"></div>
          <div className="absolute bottom-6 right-16 w-16 h-16 bg-white/10 rounded-full blur-lg"></div>
          <div className="absolute top-8 right-24 w-12 h-12 bg-white/10 rounded-full blur-md"></div>
        </div>

        {/* Scrolling Reviews Section */}
        <style jsx>{`
          @keyframes scrollLeft {
            0% { transform: translateX(0); }
            100% { transform: translateX(-50%); }
          }
        `}</style>
        <div className="bg-gradient-to-r from-purple-200 to-blue-200 border-t border-purple-300 py-4 overflow-hidden">
          {reviewsLoading ? (
            <div className="flex justify-center items-center py-8">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600"></div>
              <span className="ml-3 text-purple-700">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –æ—Ç–∑–∏–≤–∏...</span>
            </div>
          ) : reviews.length > 0 ? (
            <div 
              className="relative overflow-hidden py-4"
              onMouseEnter={(e) => {
                // Pause animation when mouse enters the carousel area
                const scrollElement = e.currentTarget.querySelector('.scroll-element') as HTMLElement
                if (scrollElement) {
                  scrollElement.style.animationPlayState = 'paused'
                }
              }}
              onMouseMove={(e) => {
                const container = e.currentTarget
                const rect = container.getBoundingClientRect()
                const mouseX = e.clientX - rect.left
                const containerWidth = rect.width
                const scrollPercentage = mouseX / containerWidth
                
                // Find the scrolling element and control position manually while paused
                const scrollElement = container.querySelector('.scroll-element') as HTMLElement
                if (scrollElement) {
                  // Keep animation paused and control position manually based on mouse
                  scrollElement.style.animationPlayState = 'paused'
                  scrollElement.style.animation = 'none' // Completely disable animation
                  // Manual position control - move based on mouse position
                  const maxTranslate = -100 // Full range of movement
                  const translateX = scrollPercentage * maxTranslate
                  scrollElement.style.transform = `translateX(${translateX}%)`
                  scrollElement.style.transition = 'transform 0.1s ease-out'
                }
              }}
              onMouseLeave={(e) => {
                // Resume animation when mouse leaves the entire area
                const scrollElement = e.currentTarget.querySelector('.scroll-element') as HTMLElement
                if (scrollElement) {
                  // Clear manual transform and resume animation
                  scrollElement.style.transform = ''
                  scrollElement.style.transition = ''
                  scrollElement.style.animation = 'scrollLeft 20s linear infinite' // Restore animation
                  scrollElement.style.animationPlayState = 'running'
                }
              }}
            >
              <div 
                className="flex scroll-element"
                style={{
                  animation: 'scrollLeft 20s linear infinite',
                  width: 'max-content',
                  animationName: 'scrollLeft',
                  animationDuration: '20s',
                  animationTimingFunction: 'linear',
                  animationIterationCount: 'infinite',
                  gap: '24px' // Professional spacing between reviews
                }}
              >
                {/* Triple the reviews for true seamless infinite scroll */}
                {[...Array(10).fill(reviews).flat(), ...Array(10).fill(reviews).flat()].map((review, index) => (
                  <div key={`${review.id}-${index}`} className="flex-shrink-0 bg-white rounded-lg p-4 shadow-sm min-w-[300px] max-w-[300px]">
                    <div className="flex items-center justify-between mb-2">
                      <span className="font-medium text-gray-900">{review.customer_name || '–ê–Ω–æ–Ω–∏–º–µ–Ω –∫–ª–∏–µ–Ω—Ç'}</span>
                      <div className="flex space-x-1">
                        {renderStarsDisplay(review.rating || 0)}
                      </div>
                    </div>
                    <p className="text-gray-700 text-sm leading-relaxed">{review.comment || '–ù—è–º–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä'}</p>
                    <p className="text-gray-500 text-xs mt-2">
                      {review.created_at ? new Date(review.created_at).toLocaleDateString('bg-BG') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –¥–∞—Ç–∞'}
                    </p>
                  </div>
                ))}
              </div>
            </div>
          ) : (
            <div className="flex justify-center items-center py-8">
              <div className="text-center">
                <span className="text-4xl mb-2 block">‚≠ê</span>
                <p className="text-purple-700 font-medium">–í—Å–µ –æ—â–µ –Ω—è–º–∞ –æ—Ç–∑–∏–≤–∏</p>
                <p className="text-purple-600 text-sm">–ë—ä–¥–µ—Ç–µ –ø—ä—Ä–≤–∏—è—Ç, –∫–æ–π—Ç–æ —â–µ –æ—Å—Ç–∞–≤–∏ –æ—Ç–∑–∏–≤!</p>
              </div>
            </div>
          )}
        </div>
      </main>
      
      <Footer />
    </div>
  )
}


