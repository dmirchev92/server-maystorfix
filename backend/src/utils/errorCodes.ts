/**
 * Standard Error Codes for ServiceTextPro API
 * 
 * Use these constants to ensure consistent error codes across the application.
 * Each error code maps to a specific HTTP status code.
 */

export const ErrorCodes = {
  // Authentication Errors (401)
  UNAUTHORIZED: 'UNAUTHORIZED',
  AUTHENTICATION_REQUIRED: 'AUTHENTICATION_REQUIRED',
  INVALID_TOKEN: 'INVALID_TOKEN',
  TOKEN_EXPIRED: 'TOKEN_EXPIRED',
  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',
  
  // Authorization Errors (403)
  FORBIDDEN: 'FORBIDDEN',
  INSUFFICIENT_PERMISSIONS: 'INSUFFICIENT_PERMISSIONS',
  ACCESS_DENIED: 'ACCESS_DENIED',
  
  // Validation Errors (400)
  BAD_REQUEST: 'BAD_REQUEST',
  MISSING_PARAMETERS: 'MISSING_PARAMETERS',
  INVALID_PARAMETERS: 'INVALID_PARAMETERS',
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  INVALID_FORMAT: 'INVALID_FORMAT',
  MESSAGE_TOO_LONG: 'MESSAGE_TOO_LONG',
  MISSING_CHAT_LINK: 'MISSING_CHAT_LINK',
  
  // Not Found Errors (404)
  NOT_FOUND: 'NOT_FOUND',
  RESOURCE_NOT_FOUND: 'RESOURCE_NOT_FOUND',
  USER_NOT_FOUND: 'USER_NOT_FOUND',
  CASE_NOT_FOUND: 'CASE_NOT_FOUND',
  PROVIDER_NOT_FOUND: 'PROVIDER_NOT_FOUND',
  NOTIFICATION_NOT_FOUND: 'NOTIFICATION_NOT_FOUND',
  REVIEW_NOT_FOUND: 'REVIEW_NOT_FOUND',
  CONVERSATION_NOT_FOUND: 'CONVERSATION_NOT_FOUND',
  ENDPOINT_NOT_FOUND: 'ENDPOINT_NOT_FOUND',
  
  // Conflict Errors (409)
  CONFLICT: 'CONFLICT',
  ALREADY_EXISTS: 'ALREADY_EXISTS',
  REVIEW_EXISTS: 'REVIEW_EXISTS',
  DUPLICATE_ENTRY: 'DUPLICATE_ENTRY',
  
  // Rate Limiting (429)
  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',
  TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS',
  
  // Server Errors (500)
  INTERNAL_ERROR: 'INTERNAL_ERROR',
  DATABASE_ERROR: 'DATABASE_ERROR',
  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',
  OPERATION_FAILED: 'OPERATION_FAILED',
  UPLOAD_FAILED: 'UPLOAD_FAILED'
} as const;

export type ErrorCode = typeof ErrorCodes[keyof typeof ErrorCodes];

/**
 * HTTP Status Code mapping for error codes
 */
export const ErrorStatusCodes: Record<ErrorCode, number> = {
  // 401
  UNAUTHORIZED: 401,
  AUTHENTICATION_REQUIRED: 401,
  INVALID_TOKEN: 401,
  TOKEN_EXPIRED: 401,
  INVALID_CREDENTIALS: 401,
  
  // 403
  FORBIDDEN: 403,
  INSUFFICIENT_PERMISSIONS: 403,
  ACCESS_DENIED: 403,
  
  // 400
  BAD_REQUEST: 400,
  MISSING_PARAMETERS: 400,
  INVALID_PARAMETERS: 400,
  VALIDATION_ERROR: 400,
  INVALID_FORMAT: 400,
  MESSAGE_TOO_LONG: 400,
  MISSING_CHAT_LINK: 400,
  
  // 404
  NOT_FOUND: 404,
  RESOURCE_NOT_FOUND: 404,
  USER_NOT_FOUND: 404,
  CASE_NOT_FOUND: 404,
  PROVIDER_NOT_FOUND: 404,
  NOTIFICATION_NOT_FOUND: 404,
  REVIEW_NOT_FOUND: 404,
  CONVERSATION_NOT_FOUND: 404,
  ENDPOINT_NOT_FOUND: 404,
  
  // 409
  CONFLICT: 409,
  ALREADY_EXISTS: 409,
  REVIEW_EXISTS: 409,
  DUPLICATE_ENTRY: 409,
  
  // 429
  RATE_LIMIT_EXCEEDED: 429,
  TOO_MANY_REQUESTS: 429,
  
  // 500
  INTERNAL_ERROR: 500,
  DATABASE_ERROR: 500,
  SERVICE_UNAVAILABLE: 503,
  OPERATION_FAILED: 500,
  UPLOAD_FAILED: 500
};
