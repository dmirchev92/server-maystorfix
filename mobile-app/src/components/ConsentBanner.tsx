import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Modal,
  ScrollView,
  Linking,
} from 'react-native';
import { useDispatch, useSelector } from 'react-redux';
import { RootState } from '../store';
import { updateConsent } from '../store/slices/appSlice';

interface ConsentBannerProps {
  visible: boolean;
  onAccept: () => void;
  onDecline: () => void;
  onCustomize: () => void;
}

const ConsentBanner: React.FC<ConsentBannerProps> = ({
  visible,
  onAccept,
  onDecline,
  onCustomize,
}) => {
  const dispatch = useDispatch();
  const { hasGDPRConsent } = useSelector((state: RootState) => state.app);
  
  const [showDetails, setShowDetails] = useState(false);

  if (!visible || hasGDPRConsent) {
    return null;
  }

  const handleAcceptAll = () => {
    dispatch(updateConsent({
      hasGDPRConsent: true,
      consentTimestamp: new Date().toISOString(),
      consentDetails: [
        {
          consentType: 'data_processing',
          status: 'granted',
          legalBasis: '–°—ä–≥–ª–∞—Å–∏–µ',
          description: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –¥–∞–Ω–Ω–∏ –∑–∞ —É—Å–ª—É–≥–∞—Ç–∞',
          timestamp: new Date().toISOString(),
        },
        {
          consentType: 'ai_communication',
          status: 'granted',
          legalBasis: '–°—ä–≥–ª–∞—Å–∏–µ',
          description: 'AI –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏ –æ—Ç–≥–æ–≤–æ—Ä–∏',
          timestamp: new Date().toISOString(),
        },
        {
          consentType: 'data_storage',
          status: 'granted',
          legalBasis: '–°—ä–≥–ª–∞—Å–∏–µ',
          description: '–°—ä—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∏',
          timestamp: new Date().toISOString(),
        },
        {
          consentType: 'analytics',
          status: 'granted',
          legalBasis: '–°—ä–≥–ª–∞—Å–∏–µ',
          description: '–ê–Ω–∞–ª–∏—Ç–∏—á–Ω–∏ –¥–∞–Ω–Ω–∏',
          timestamp: new Date().toISOString(),
        },
      ]
    }));
    onAccept();
  };

  const handleDecline = () => {
    dispatch(updateConsent({
      hasGDPRConsent: false,
      consentTimestamp: new Date().toISOString(),
      consentDetails: []
    }));
    onDecline();
  };

  const openPrivacyPolicy = () => {
    Linking.openURL('https://servicetextpro.com/privacy');
  };

  const openTerms = () => {
    Linking.openURL('https://servicetextpro.com/terms');
  };

  return (
    <>
      <View style={styles.banner}>
        <View style={styles.bannerContent}>
          <Text style={styles.bannerTitle}>üç™ –ü–æ–≤–µ—Ä–∏—Ç–µ–ª–Ω–æ—Å—Ç –∏ –±–∏—Å–∫–≤–∏—Ç–∫–∏</Text>
          <Text style={styles.bannerText}>
            –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –±–∏—Å–∫–≤–∏—Ç–∫–∏ –∏ –ø–æ–¥–æ–±–Ω–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∑–∞ –ø–æ–¥–æ–±—Ä—è–≤–∞–Ω–µ –Ω–∞ —É—Å–ª—É–≥–∞—Ç–∞, 
            –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ –∏ –∞–Ω–∞–ª–∏–∑ –Ω–∞ —Ç—Ä–∞—Ñ–∏–∫–∞. 
            –°—ä–≥–ª–∞—Å—è–≤–∞–π–∫–∏ —Å–µ, –≤–∏–µ –ø—Ä–∏–µ–º–∞—Ç–µ –Ω–∞—à–∞—Ç–∞{' '}
            <Text style={styles.link} onPress={openPrivacyPolicy}>
              –ü–æ–ª–∏—Ç–∏–∫–∞ –∑–∞ –ø–æ–≤–µ—Ä–∏—Ç–µ–ª–Ω–æ—Å—Ç
            </Text>{' '}
            –∏{' '}
            <Text style={styles.link} onPress={openTerms}>
              –£—Å–ª–æ–≤–∏—è –∑–∞ –ø–æ–ª–∑–≤–∞–Ω–µ
            </Text>
            .
          </Text>
          
          <View style={styles.bannerActions}>
            <TouchableOpacity
              style={styles.declineButton}
              onPress={handleDecline}
            >
              <Text style={styles.declineButtonText}>–û—Ç–∫–∞–∑</Text>
            </TouchableOpacity>
            
            <TouchableOpacity
              style={styles.customizeButton}
              onPress={onCustomize}
            >
              <Text style={styles.customizeButtonText}>–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–π</Text>
            </TouchableOpacity>
            
            <TouchableOpacity
              style={styles.acceptButton}
              onPress={handleAcceptAll}
            >
              <Text style={styles.acceptButtonText}>–ü—Ä–∏–µ–º–∞–º –≤—Å–∏—á–∫–∏</Text>
            </TouchableOpacity>
          </View>
          
          <TouchableOpacity
            style={styles.detailsButton}
            onPress={() => setShowDetails(true)}
          >
            <Text style={styles.detailsButtonText}>
              ‚ÑπÔ∏è –ö–∞–∫–≤–æ –æ–∑–Ω–∞—á–∞–≤–∞ —Ç–æ–≤–∞?
            </Text>
          </TouchableOpacity>
        </View>
      </View>

      <Modal
        visible={showDetails}
        animationType="slide"
        transparent={true}
      >
        <View style={styles.modalOverlay}>
          <View style={styles.modalContent}>
            <Text style={styles.modalTitle}>
              –ö–∞–∫–≤–æ –æ–∑–Ω–∞—á–∞–≤–∞—Ç –±–∏—Å–∫–≤–∏—Ç–∫–∏—Ç–µ?
            </Text>
            
            <ScrollView style={styles.modalScroll}>
              <View style={styles.detailSection}>
                <Text style={styles.detailTitle}>üç™ –ù–µ–æ–±—Ö–æ–¥–∏–º–∏ –±–∏—Å–∫–≤–∏—Ç–∫–∏</Text>
                <Text style={styles.detailText}>
                  –¢–µ–∑–∏ –±–∏—Å–∫–≤–∏—Ç–∫–∏ —Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏ –∑–∞ –æ—Å–Ω–æ–≤–Ω–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ. 
                  –ë–µ–∑ —Ç—è—Ö –Ω–µ –º–æ–∂–µ–º –¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º —É—Å–ª—É–≥–∞—Ç–∞.
                </Text>
              </View>

              <View style={styles.detailSection}>
                <Text style={styles.detailTitle}>ü§ñ AI –∫–æ–º—É–Ω–∏–∫–∞—Ü–∏—è</Text>
                <Text style={styles.detailText}>
                  –°—ä—Ö—Ä–∞–Ω—è–≤–∞–º–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø—Ä–æ–ø—É—Å–Ω–∞—Ç–∏ –æ–±–∞–∂–¥–∞–Ω–∏—è –∏ AI —Ä–∞–∑–≥–æ–≤–æ—Ä–∏, 
                  –∑–∞ –¥–∞ –º–æ–∂–µ—Ç–µ –¥–∞ –≥–∏ –ø—Ä–µ–≥–ª–µ–∂–¥–∞—Ç–µ –∏ –ø–æ–µ–º–∞—Ç–µ.
                </Text>
              </View>

              <View style={styles.detailSection}>
                <Text style={styles.detailTitle}>üìä –ê–Ω–∞–ª–∏—Ç–∏—á–Ω–∏ –±–∏—Å–∫–≤–∏—Ç–∫–∏</Text>
                <Text style={styles.detailText}>
                  –ü–æ–º–æ–≥–∞—Ç –Ω–∏ –¥–∞ —Ä–∞–∑–±–µ—Ä–µ–º –∫–∞–∫ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –∏ 
                  –¥–∞ –≥–æ –ø–æ–¥–æ–±—Ä–∏–º –∑–∞ –≤–∞—Å.
                </Text>
              </View>

              <View style={styles.detailSection}>
                <Text style={styles.detailTitle}>üîí –í–∞—à–∏—Ç–µ –¥–∞–Ω–Ω–∏</Text>
                <Text style={styles.detailText}>
                  –í—Å–∏—á–∫–∏ –¥–∞–Ω–Ω–∏ —Å–µ —Å—ä—Ö—Ä–∞–Ω—è–≤–∞—Ç —Å–∏–≥—É—Ä–Ω–æ –≤ –ï–° —Å–ø–æ—Ä–µ–¥ GDPR. 
                  –ú–æ–∂–µ—Ç–µ –¥–∞ –≥–∏ –∏–∑—Ç—Ä–∏–µ—Ç–µ –ø–æ –≤—Å—è–∫–æ –≤—Ä–µ–º–µ.
                </Text>
              </View>

              <View style={styles.detailSection}>
                <Text style={styles.detailTitle}>üì± –ö–∞–∫ –¥–∞ —É–ø—Ä–∞–≤–ª—è–≤–∞—Ç–µ</Text>
                <Text style={styles.detailText}>
                  –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ –º–æ–∂–µ—Ç–µ –¥–∞ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–Ω–∏—è—Ç–∞ —Å–∏ 
                  –∑–∞ –±–∏—Å–∫–≤–∏—Ç–∫–∏—Ç–µ –ø–æ –≤—Å—è–∫–æ –≤—Ä–µ–º–µ.
                </Text>
              </View>
            </ScrollView>

            <TouchableOpacity
              style={styles.modalCloseButton}
              onPress={() => setShowDetails(false)}
            >
              <Text style={styles.modalCloseButtonText}>–ó–∞—Ç–≤–æ—Ä–∏</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
    </>
  );
};

const styles = StyleSheet.create({
  banner: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    backgroundColor: '#fff',
    borderTopWidth: 1,
    borderTopColor: '#e0e0e0',
    padding: 16,
    zIndex: 1000,
  },
  bannerContent: {
    maxWidth: 400,
    alignSelf: 'center',
    width: '100%',
  },
  bannerTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#2c3e50',
    marginBottom: 8,
    textAlign: 'center',
  },
  bannerText: {
    fontSize: 14,
    color: '#555',
    lineHeight: 20,
    marginBottom: 16,
    textAlign: 'center',
  },
  link: {
    color: '#3498db',
    textDecorationLine: 'underline',
  },
  bannerActions: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 12,
  },
  declineButton: {
    flex: 1,
    padding: 12,
    marginRight: 8,
    borderRadius: 6,
    borderWidth: 1,
    borderColor: '#e0e0e0',
    alignItems: 'center',
  },
  declineButtonText: {
    color: '#7f8c8d',
    fontSize: 14,
    fontWeight: '600',
  },
  customizeButton: {
    flex: 1,
    padding: 12,
    marginHorizontal: 4,
    borderRadius: 6,
    backgroundColor: '#f39c12',
    alignItems: 'center',
  },
  customizeButtonText: {
    color: '#fff',
    fontSize: 14,
    fontWeight: '600',
  },
  acceptButton: {
    flex: 1,
    padding: 12,
    marginLeft: 8,
    borderRadius: 6,
    backgroundColor: '#27ae60',
    alignItems: 'center',
  },
  acceptButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
  detailsButton: {
    alignItems: 'center',
    padding: 8,
  },
  detailsButtonText: {
    color: '#3498db',
    fontSize: 12,
    textDecorationLine: 'underline',
  },
  modalOverlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'center',
    alignItems: 'center',
  },
  modalContent: {
    backgroundColor: '#fff',
    margin: 20,
    padding: 20,
    borderRadius: 12,
    width: '90%',
    maxWidth: 400,
    maxHeight: '80%',
  },
  modalTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#2c3e50',
    marginBottom: 16,
    textAlign: 'center',
  },
  modalScroll: {
    flex: 1,
  },
  detailSection: {
    marginBottom: 20,
  },
  detailTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: '#2c3e50',
    marginBottom: 8,
  },
  detailText: {
    fontSize: 14,
    color: '#555',
    lineHeight: 20,
  },
  modalCloseButton: {
    backgroundColor: '#3498db',
    padding: 12,
    borderRadius: 6,
    alignItems: 'center',
    marginTop: 16,
  },
  modalCloseButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
});

export default ConsentBanner;
